cm <-colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quaters(t1)
quarters(t1)
quarters(t2)
t3 <-strptime("October 17, 1986 08:24)
""
quit
exit
sdf
)
te
t3 <-strptime("October 17, 1986 08:24")
t3 <-strptime("October 17, 1986 08:24")
t3 <- strptime("October 17, 1986 08:24", format =)
t3 <- strptime("October 17, 1986 08:24", format = POSIXlt)
t3 <- strptime("October 17, 1986 08:24", format = "POSIXlt")
t3 <- c("October 17, 1986 08:24")
t3 <- strptime(c("October 17, 1986 08:24"), format = "POSIXlt")
info()
skip()
strptime(t3,"%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Syst.time() - t1
Sys.time() - t1
difftime(Sys.time(),51, units = "days")
difftime(Sys.time(),t1, units = "days")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(speed, dist)
plot("speed", "dist")
plot(cars$speed", cars$dist)
""
plot(cars$speed, cars$dist)
plot(cars$dist, cars$speed)
plot(x = cars$speed, y = cars$dist, "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars,main = "My plot")
plot(cars,main = "My Plot")
plot(cars,sub = "My Plot Subtitle")
plot(cars,col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
boxplot(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(httr)
?oauth_endpoint
oauth_endpoints("github")
myapp <- oauth_app("github", key = "8bcebf928da362d9c9e4", secret = "236d845f68db595068c507e1bd31bc40f27de5cc")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "8bcebf928da362d9c9e4", secret = "236d845f68db595068c507e1bd31bc40f27de5cc")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
stop_for_status(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
oauth_endpoints("myfirstapi")
library(httr)
oauth_end("github")
oauth_endpoints("github")
myapp <- oauth_app("myfirstapi", key = "8bcebf928da362d9c9e4",)
myapp <- oauth_app("myfirstapi", key = "8bcebf928da362d9c9e4", secret = "236d845f68db595068c507e1bd31bc40f27de5cc")
gibhub_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
gibhub_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos",gtoken)
stop_for_status(req)
content(req)
myapp <- oauth_app("github", key = "8bcebf928da362d9c9e4", secret = "236d845f68db595068c507e1bd31bc40f27de5cc")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos",gtoken)
stop_for_status(req)
content(req)
demo()
library("base")
library(base)
library(httr)
oauth_endpoints("github")
install.packages("sqldf")
install.packages("RMySQL")
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
?nchar
?read.table
t10 <- scan(con, skip = 9, nlines = 1)
t10 <- readLines(con, n = 10)
t10 <- readLines(htmlCode, n = 10)
t10 <- readLines(htmlCode, n = 10L)
t10 <- readLines(htmlCode)
htmlCode
t10 <- scan(htmlCode, n = 1, skip = 9)
t10 <- scan("htmlCode", n = 1, skip = 9)
installed.packages("rvest")
a <- html("http://biostat.jhsph.edu/~jleek/contact.html")
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con, n = 10)
htmlCode
t <- readLines(htmlCode, n = -9)
htmlCode
t <- readLines(htmlCode, n= 9)
t <- htmlCode[10]
t_number <- nchar(t)
t_number
htmlCode <- readLines(con, n = 20)
t <- thmlCode[20]
t <- htmlCode[20]
t_num <- nchar(t)
t_num
htmlCode <- readLines(con)
t <- nchar(htmlCode[30])
t
t <- nchar(htmlCode[100])
t
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
a <- readLines(con)
close(con)
a
read.fwf(con)
read.fwf(con, 4)
con <- ("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
getwd()
getwd()
setwd("/Users/joyce/Documents/R programming")
t <- read.fwf("getdata-wksst8110.for")
t <- read.fwf("getdata-wksst8110.for", 9)
sum <- sum(t[4])
sum <- sum(t[,4])
t
head(t)
t <- read.fwf("getdata-wksst8110.for", widths = c(12, 7,4, 9,4, 9,4, 9,4), skip = 4)
head(t)
sum <- sum(t[,4])
sum
library(httr)
c <- GET("https://github.com/login/oauth/authorize")
c
t <- POST("https://github.com/login/oauth/access_token")
t
oauth_endpoints("github")
myapp <- oauth_app("myfirstapi", key = "8bcebf928da362d9c9e4", secret = "236d845f68db595068c507e1bd31bc40f27de5cc
")
myapp <- oauth_app("myfirstapi", key = "8bcebf928da362d9c9e4", secret = "236d845f68db595068c507e1bd31bc40f27de5cc
")
myapp <- oauth_app("myfirstapi", key = "8bcebf928da362d9c9e4", secret = "236d845f68db595068c507e1bd31bc40f27de5cc")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "ee966346b69041e9df5b", secret = "7661ca3a559011e986252d86e5af1a185839bf65")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(ttoken = github_token)
req <- GET("https://api.github.com/users/jtleek/repos",gtoken)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos",gtoken)
stop_for_status(req)
content(req)
json1 <- content(req)
json2 <- jsonlite::fromJSON(toJSON(json1))
json2 <- jsonlite::fromJSON(json1)
t <- toJSON(json1)
t <- jsonlite::toJSON(json1)
json2 <- jsonlite::fromJSON(t)
time <- time(json2)
content(req)
t <- req$date
t
t <- req$status_code
t
json1 <- content(req)
t <- jsonlite::toJSON(json1)
json2 <- jsonlite::fromJSON(t)
json2
head(json2)
str(json2)
head(json2)
a <- json2[json2$full_name == "jtleek/datasharing",]
a
a <- json2[json2$full_name == "jtleek/datasharing", json2$created_at]
a
json2[json2$full_name == "jtleek/datasharing",]
library(dplyr)
options(width = 105)
chicago <- read RDS("chicago.rds")
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
getwd()
download.file(fileurl, destfile = "/Users/joyce/Documents/R programming", method = "curl")
download.file(fileurl, destfile = "/Users/joyce/Documents/R programming/quiz3.csv", method = "curl")
file <- read.csv("quiz3.csv")
library(plyr)
install.packages("plyr")
t1 <- filter(file, ACR == 3 & AGS == 6)
head(t1,n =3)
agricultureLogical <- which(file,(ACR == 3 & AGS == 6) )
agricultureLogical <- which(ACR == 3 & AGS == 6)
agricultureLogical <- which(file$ACR == 3 & file$AGS == 6)
agricultrueLogical
agricultureLogical
library(jpeg)
install.packages("jpeg")
library("jpeg")
picurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
getwd()
download.file(picurl, destfile = "/Users/joyce/Documents/R programming/quiz3.jpg", method = "curl")
data <- readJPEG("quiz3.jpg",native = TRUE)
head(data)
quantile(data, probs = c(0.3,0.8))
data <- readJPEG("quiz3.jpg",native = FALSE)
data
head(data)
data <- readJPEG("quiz3.jpg",native = TRUE)
head(data)
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
getwd()
download.file(fileurl,destfile = "/Users/joyce/Documents/R programming/grossdomestic.csv", method = "curl")
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileurl, destfile = "/Users/joyce/Documents/R programming/education.csv", method = "curl")
library(dplyr)
data1 <- read.csv("grossdomestic.csv")
data2 <- read.csv("education.csv")
head(data1)
head(data2)
names(data1)
names(data2)
i <- match("X", names(data1))
j <- match("CountryCode", names(data2))
i
j
i <- match(data1$X, data2$CountryCode)
i
data2$CountryCode
data1$X
class(data1$X)
class(data2$CountryCode)
i <- match("X", names(data1))
i
i <- match(data1$X, data2$CountryCode)
i
head(data1)
names(data1)
class(data1)
foo <- intersect(data1$X, data2$CountryCode)
length(foo)
data1 <- read.csv("grossdomestic.csv", stringsAsFactors = FALSE)
data2 <- read.csv("education.csv", stringsAsFactors = FALSE)
foo <- intersect(data1$X, data2$CountryCode)
foo
length(foo)
names(data1)
names(data2)
x <- match(data1$X, data2$CountryCode)
x
x1 <- filter(x, na.rm = TRUE)
data1 %>% left_join(data2 %>% count("CountryCode"))
mergeData <- merge(data1, data2, by.x = "X", by.y = "CountryCode", all = TRUE)
head(mergeData)
names(mergeData)
tail(mergeData, n=3)
mergeData$X.3
mergeData$X.2
mergeData$X.1
mergeData$X.4
mergeData$X.5
mergeData$X.6
mergeData$X.7
data1 <- read.csv(text = readLines("grossdomestic.csv")[-(1:5)])
head(data1)
data1 <- read.csv(text = readLines("grossdomestic.csv")[-(1:4)])
head(data1)
data1 <- read.csv(text = readLines("grossdomestic.csv")[-(1:5)], stringsAsFactors = FALSE)
head(data1)
data1 <- read.csv(text = readLines("grossdomestic.csv")[-(1:4)], stringsAsFactors = FALSE)
head(data1)
as.numeric(data1$X.1)
data1_1 <- arrange(data1, X.1)
head(data1_1)
as.numeric(data1$X.1, na.rm = TRUE)
na.rm(data1)
na.omit(data1)
na.omit(data1$X.1)
as.numberic(data1$X.1)
as.numeric(data1$X.1)
data1_1 <- arrange(data1, desc(X.1))
data1_1 <- arrange(data1, desc(X.1))
data1_1
head(data1_1)
head(data1_1, n =13)
head(data1_1, n =16)
head(data1)
data1_1 <- arrange(data1, desc(X.1))
head(data1_1)
tail(data1)
data1_1 <- arrange(data1, desc(Gross.domestic.product.2012))
head(data1$X.1)
as.numeric(data1$X.1)
data1_1 <- arrange(data1, desc(X.1))
head(data1_1)
data1
data1 <- read.csv("grossdomestic.csv", header = F, skip = 5, nrows = 190)
tail(data1)
head(data1)
mergeData <- merge(data1, data2, by.x = "V1", by.y = "CountryCode", sort = TRUE)
head(mergeData)
combined[with(combined, order(-V2))]
combined[with(mergeData, order(-V2))]
mergeData[with(mergeData, order(-V2))]
mergeData <- merge(data1, data2, by.x = "V1", by.y = "CountryCode)
mergeData[with(mergeData, order(-V2))]
mergeData <- merge(data1, data2, by.x = "V1", by.y = "CountryCode")
head(mergeData)
data1_1 <- arrange(data1, desc(V2))
head(data1_1)
head(data1_1, n=13)
names(data2)
names(data1)
head(data1)
head(data2)
mean1 <- mean(mergeData[mergeData$Income.Group == "High income: OECD",]$V2)
mean1
mean2 <- mean(mergeData[mergeData$Incom.Group == "High income: nonOECD",]$V2)
mean2
mean2 <- mean(mergeData[mergeData$Income.Group == "High income: nonOECD",]$V2)
mean2
names(mergeData)
head(mergeData)
quantile(mergeData$V2,na.rm = TRUE)
table1 <- table(mergeData$V2, mergeData$Income.Group)
table1
t1 <- select(table1[1:38])
t1 <- select(table1[1:38,])
t1 <- table1[1:38,]
t1
num <- nrow(t1$Lower middle income)
num <- nrow(t1 == "Lower middle income")
num
num <- sum(t1 == "Lower middle income")
num
num <- sum(t1)
num
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = "./americancommunitysurvey.csv", method = "curl")
data1 <- read.csv("americancommunitysurvey.csv")
splinames <- strsplit(names(data1), "wgtp")
splinames[123]
data2 <- read.csv("grossdomestic.csv")
head(data2,n = 3)
head(data2,n = 6)
data2 <- read.csv("grossdomestic.csv", skip = 5)
head(data2,n = 3)
data2 <- read.csv("grossdomestic.csv", skip = 4)
head(data2,n = 3)
rmv <- sub(",","", data2$X.4)
head(rmv)
rmv <- gsub(",","", data2$X.4)
head(rmv)
rmv <- as.numeric(rmv)
head(rmv)
rmv <- as.numeric(gsub(",","", data2$X.4))
mean_rmv <- mean(rmv)
mean_rmv
head(rmv)
mean_rmv <- mean(rmv, na.rm = TRUE)
mean_rmv
rmv <- as.numeric(sub(",","", data2$X.4))
mean_rmv <- mean(rmv, na.rm = TRUE)
mean_rmv
nrow(data2$x.4)
nrow(data2$X.4)
data2$X.4
mean_rmv <- mean(rmv[1:190,])
mean_rmv <- mean(rmv[1:190])
mean_rmv
mean_rmv <- mean(rmv[1:190], na.rm = TRUE)
mean_rmv
rmv <- as.numeric(gsub(",","", data2$X.4))
head(rmv)
mean_rmv <- mean(rmv[1:190], na.rm = TRUE)
mean_rmv
num <- grep("^United", data2$CountryNames)
num
num <- grep("^United", data2$countryNames)
num
data2$countryNames
head(data2)
num <- grep("^United", data2$X.3)
num
data3 <- read.csv("education.csv")
head(data3)
mergedata <- merge(data2, data3, by.x = "X", by.y = "CountryCode")
end <- grep("June", mergedata$Special.Notes)
end
nrow(end)
ncol(end)
length(end)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn <- getSymbols("AMZN", auto.assign = FALSE)
head(amzn)
?index
sampleTimes <- index(amzn)
head(sampleTimes)
num <- length(grep("2012", sampleTimes))
num
day <- weekdays(sampleTimes)
head(day)
num2 <- length(grep("Monday", day))
num2
day <- weekdays(grep("2012", sampleTimes))
y2012 <- grep("2012", sampleTimes)
head(y2012)
head(sampleTimes)
filter1 <- grep("2012", sampleTimes)
filter1
filter2 <- weekdays(filter1)
head(sampleTimes)
filter1 <- which(sampleTimes %in% "2012")
filter1
sampleTimes[filter1]
sampleTimes[1261:1510]
day <- length(grep("Mondays", weekdays(sampleTimes[1261:1510])))
day
day <- length(grep("Monday", weekdays(sampleTimes[1261:1510])))
day
mergedata <- merge(data2, data3, by.x = "X", by.y = "CountryCode")
num_end <- length(grep("June", mergedata$Special.Notes))
num_end
num_end <- length(grep("June""June", mergedata$Special.Notes))
num_end <- length(grep("June"&"Fiscal", mergedata$Special.Notes))
num_end <- length(grep("Fiscal", mergedata$Special.Notes))
num_end
num_end <- length(grep("Fiscal"|"June", mergedata$Special.Notes))
num_end <- length(grep("Fiscal & June", mergedata$Special.Notes))
num_end
num_end <- length(grep("Fiscal | June", mergedata$Special.Notes))
num_end
num_end <- length(grep("Fiascal June", mergedata$Special.Notes))
num_end
num_end <- length(grep("Fiscal June", mergedata$Special.Notes))
num_end
num_end <- length(grep("Fiscal year end: June", mergedata$Special.Notes))
num_end
setwd("~/Documents/R programming/Exploratory_Data_Analysis/ExData_Plotting1")
# read all of the data in R
data_frame <- read.table("hps.txt", header = TRUE, sep = "", na.strings = "?", stringsAsFactors = FALSE)
data_date <- as.Date(data_frame, format = "%d%m%Y")
#read datd range from 01/02/2007 to 02/02/2007
data01 <- subset(data_frame, subset = (Date >= "01/02/2007" & Date <= "02/02/2007"))
rm(data_frame)
# plot1
png(filename = "plot1.png", width = 480, height = 480, units = "px", bg = "transparent")
hist(data01$Global_active_power, main = "Global Active Power", xlab = "Global Active Power(kilowatts)",
ylab = "Frequency", col = "Red")
# Saving file
dev.off()
data_frame <- read.table("hps.txt", header = TRUE, sep = "", na.strings = "?", stringsAsFactors = FALSE)
head(data_frame,6)
str(data_frame)
header(data_frame)
class(data_frame)
data_frame <- read.csv("hps.txt", header = TRUE, sep = "", na.strings = "?", stringsAsFactors = FALSE)
head(data_frame, 6)
str(data)
str(data_frame)
data01 <- read.csv("hps.txt", header = TRUE, sep = "", as.strings = "?", stringsAsFactors = FALSE)
data01 <- read.csv(file = "hps.txt", header = TRUE, sep = "", as.strings = "?", stringsAsFactors = FALSE)
data01 <- read.csv(file = "hps.txt", header = TRUE, sep = "", as.strings = "?", stringsAsFactors = FALSE)
data01 <- read.table(file = "hps.txt", header = TRUE, sep = "", as.strings = "?", stringsAsFactors = FALSE)
data01 <- read.csv(file = "hps.txt", header = TRUE, sep = "", na.strings = "?", stringsAsFactors = FALSE)
head(data01,3)
str(data01)
